@startuml
set namespaceSeparator ::

class "lazyplants::components::api_connector.dart::ApiConnector" {
  +String baseUrl
  +Box dataBox
  +Box plantBox
  +Box settingsBox
  +dynamic initBox()
  +dynamic getData()
  +dynamic getPlant()
  +dynamic patchPlant()
  +dynamic getMembersData()
  +dynamic checkLoggedIn()
  +dynamic postLogin()
  +dynamic postLogout()
  +dynamic postCreateAccount()
  +dynamic cachePlant()
  +dynamic cachePlantData()
  +dynamic readPlant()
  +dynamic plantCount()
  +dynamic readPlantData()
}

"lazyplants::components::api_connector.dart::ApiConnector" o-- "hive::hive.dart::Box"

class "lazyplants::components::db_models.dart::Plant" {
  +String memberId
  +String plantId
  +String plantName
  +Image plantPic
  +DateTime plantDate
  +String room
  +double soilMoisture
  +double humidity
  +String espId
}

"lazyplants::components::db_models.dart::Plant" o-- "dart::ui::Image"

class "lazyplants::components::db_models.dart::PlantData" {
  +String espId
  +String memberId
  +String plantId
  +double soilMoisture
  +double humidity
  +double temperature
  +double watertank
  +DateTime measuringTime
  +bool water
}

class "lazyplants::components::db_models.dart::PlantAdapter" {
  +int typeId
  +int hashCode
  +Plant read()
  +void write()
  +bool ==()
}

"hive::hive.dart::TypeAdapter<T>" <|-- "lazyplants::components::db_models.dart::PlantAdapter"

class "lazyplants::components::db_models.dart::PlantDataAdapter" {
  +int typeId
  +int hashCode
  +PlantData read()
  +void write()
  +bool ==()
}

"hive::hive.dart::TypeAdapter<T>" <|-- "lazyplants::components::db_models.dart::PlantDataAdapter"

class "lazyplants::components::navigation_drawer.dart::NavigationDrawer" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "lazyplants::components::navigation_drawer.dart::NavigationDrawer"

class "lazyplants::components::sliver_appbar.dart::MySliverAppBar" {
  +double collapsedHeight
  +double expandedHeight
  +double paddingTop
  +dynamic coverImgUrl
  +dynamic title
  +double minExtent
  +double maxExtent
  +dynamic shouldRebuild()
  +Color makeStickyHeaderBgColor()
  +Color makeStickyHeaderTextColor()
  +Widget build()
}

"flutter::src::widgets::sliver_persistent_header.dart::SliverPersistentHeaderDelegate" <|-- "lazyplants::components::sliver_appbar.dart::MySliverAppBar"

class "lazyplants::main.dart::MyApp" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "lazyplants::main.dart::MyApp"

class "lazyplants::screens::add_plant::add_plant_screen1.dart::AddPlantScreen1" {
  +Plant plant
  +Widget build()
}

"lazyplants::screens::add_plant::add_plant_screen1.dart::AddPlantScreen1" o-- "lazyplants::components::db_models.dart::Plant"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "lazyplants::screens::add_plant::add_plant_screen1.dart::AddPlantScreen1"

class "lazyplants::screens::add_plant::add_plant_screen2.dart::AddPlantScreen2" {
  +Plant plant
  +_AddPlantScreen2State createState()
}

"lazyplants::screens::add_plant::add_plant_screen2.dart::AddPlantScreen2" o-- "lazyplants::components::db_models.dart::Plant"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "lazyplants::screens::add_plant::add_plant_screen2.dart::AddPlantScreen2"

class "lazyplants::screens::add_plant::add_plant_screen2.dart::_AddPlantScreen2State" {
  +dynamic dropdownValue
  +dynamic dropdownHelper
  +dynamic plantName
  +dynamic espList()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "lazyplants::screens::add_plant::add_plant_screen2.dart::_AddPlantScreen2State"

class "lazyplants::screens::add_plant::add_plant_screen3.dart::AddPlantScreen3" {
  +Plant plant
  +_AddPlantScreen3State createState()
}

"lazyplants::screens::add_plant::add_plant_screen3.dart::AddPlantScreen3" o-- "lazyplants::components::db_models.dart::Plant"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "lazyplants::screens::add_plant::add_plant_screen3.dart::AddPlantScreen3"

class "lazyplants::screens::add_plant::add_plant_screen3.dart::_AddPlantScreen3State" {
  -double _currentHumiditySliderValue
  -dynamic _showMyDialog()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "lazyplants::screens::add_plant::add_plant_screen3.dart::_AddPlantScreen3State"

class "lazyplants::screens::add_plant::add_plant_screen4.dart::AddPlantScreen4" {
  +Plant plant
  +_AddPlantScreen4State createState()
}

"lazyplants::screens::add_plant::add_plant_screen4.dart::AddPlantScreen4" o-- "lazyplants::components::db_models.dart::Plant"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "lazyplants::screens::add_plant::add_plant_screen4.dart::AddPlantScreen4"

class "lazyplants::screens::add_plant::add_plant_screen4.dart::_AddPlantScreen4State" {
  -Image _image
  +ImagePicker picker
  +dynamic getImage()
  +dynamic saveChanges()
  +Widget build()
}

"lazyplants::screens::add_plant::add_plant_screen4.dart::_AddPlantScreen4State" o-- "flutter::src::widgets::image.dart::Image"
"lazyplants::screens::add_plant::add_plant_screen4.dart::_AddPlantScreen4State" o-- "image_picker::image_picker.dart::ImagePicker"
"flutter::src::widgets::framework.dart::State<T>" <|-- "lazyplants::screens::add_plant::add_plant_screen4.dart::_AddPlantScreen4State"

class "lazyplants::screens::home_screen.dart::HomeScreen" {
  +_HomeScreenState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "lazyplants::screens::home_screen.dart::HomeScreen"

class "lazyplants::screens::home_screen.dart::_HomeScreenState" {
  +dynamic plantList
  +void initState()
  -dynamic _buildList()
  +dynamic loadDataInList()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "lazyplants::screens::home_screen.dart::_HomeScreenState"

class "lazyplants::screens::home_screen.dart::CircleIndicator" {
  +void paint()
  +dynamic shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "lazyplants::screens::home_screen.dart::CircleIndicator"

class "lazyplants::screens::home_screen.dart::WaterIndicator" {
  +double percentage
  +void paint()
  +dynamic shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "lazyplants::screens::home_screen.dart::WaterIndicator"

class "lazyplants::screens::login::create_account_screen1.dart::CreateAccountScreen1" {
  +dynamic firstName
  +dynamic lastName
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "lazyplants::screens::login::create_account_screen1.dart::CreateAccountScreen1"

class "lazyplants::screens::login::create_account_screen2.dart::CreateAccountScreen2" {
  +dynamic firstName
  +dynamic lastName
  +_CreateAccountScreen2State createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "lazyplants::screens::login::create_account_screen2.dart::CreateAccountScreen2"

class "lazyplants::screens::login::create_account_screen2.dart::_CreateAccountScreen2State" {
  +dynamic username
  +dynamic mail
  +dynamic password
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "lazyplants::screens::login::create_account_screen2.dart::_CreateAccountScreen2State"

class "lazyplants::screens::login::loading_screen.dart::LoadingScreen" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "lazyplants::screens::login::loading_screen.dart::LoadingScreen"

class "lazyplants::screens::login::login_screen.dart::LoginScreen" {
  +_LoginScreenState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "lazyplants::screens::login::login_screen.dart::LoginScreen"

class "lazyplants::screens::login::login_screen.dart::_LoginScreenState" {
  +dynamic mail
  +dynamic password
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "lazyplants::screens::login::login_screen.dart::_LoginScreenState"

class "lazyplants::translation.dart::Translation" {
  +dynamic keys
}

"get::get_navigation::src::root::internacionalization.dart::Translations" <|-- "lazyplants::translation.dart::Translation"


@enduml